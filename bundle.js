!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=5)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default={Debug:{SHOW_COLLIDERS:!1},Game:{OFFSET_SPEED:.4,MAX_TIME_TICK:1e3/60,SCREEN_BUFFER:50,GROUND_BUFFER:10,MIN_OBSTACLE_DISTANCE:400,JUMP_KEY:32},Player:{STEP_SPEED:.02,JUMP_DISTANCE:250,JUMP_HEIGHT:80},Score:{FACTOR:.1},Assets:{HREF:"assets/"}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.rand=function(t,e){return Math.random()*(e-t)+t},t}();e.default=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),o=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,o){function a(t){try{u(i.next(t))}catch(t){o(t)}}function s(t){try{u(i.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}))},a=this&&this.__generator||function(t,e){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(e,"__esModule",{value:!0});var s=n(3),u=n(8),l=function(t){function e(e,n){var i=t.call(this,n)||this;return i.context=e,i}return r(e,t),e.prototype.preload=function(){return o(this,void 0,void 0,(function(){var e=this;return a(this,(function(n){switch(n.label){case 0:return[4,t.prototype.preload.call(this)];case 1:return n.sent(),[2,new Promise((function(t){e.pixelMap=new u.default(e.context,e.getImage()),t()}))]}}))}))},e.prototype.getPixelMap=function(){return this.pixelMap},e}(s.default);e.default=l},function(t,e,n){"use strict";var i=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,o){function a(t){try{u(i.next(t))}catch(t){o(t)}}function s(t){try{u(i.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}))},r=this&&this.__generator||function(t,e){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(t){this.image=new Image,this.link=t}return t.prototype.preload=function(){return i(this,void 0,void 0,(function(){var t,e,n;return r(this,(function(i){return e=(t=this).image,n=t.link,[2,new Promise((function(t){e.src=n,e.onload=function(){t()}}))]}))}))},t.prototype.getImage=function(){return this.image},t}();e.default=o},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(9),a=n(2),s=function(t){function e(e){return t.call(this,e)||this}return r(e,t),e.prototype.createSprite=function(t,e){return new a.default(t,e)},e.prototype.getPixelMap=function(){return this.sprites[this.currentImage].getPixelMap()},e}(o.default);e.default=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(6);document.addEventListener("DOMContentLoaded",(function(){window.__game=new i.default}))},function(t,e,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},r=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,o){function a(t){try{u(i.next(t))}catch(t){o(t)}}function s(t){try{u(i.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}))},o=this&&this.__generator||function(t,e){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(e,"__esModule",{value:!0});var a=n(7),s=n(10),u=n(11),l=n(12),c=n(13),f=n(1),h=n(0),p=n(14),d=n(15),y=function(){function t(){this.preloaded=!1,this.requestedFrame=!1,this.canvas=document.getElementById("game"),this.context=this.canvas.getContext("2d"),this.keyHandler=new c.default,this.startGame()}return t.prototype.startGame=function(){var t=this;this.reset(),this.initObjects().then((function(){t.draw(),t.requestedFrame||(requestAnimationFrame(t.step.bind(t)),t.requestedFrame=!0)}))},t.prototype.getDefaultDrawableOptions=function(){var t=this;return{context:this.context,getOffset:function(){return t.offset},width:this.canvas.width,height:this.canvas.height}},t.prototype.initObjects=function(){return r(this,void 0,void 0,(function(){return o(this,(function(t){switch(t.label){case 0:return this.preloaded?[3,3]:[4,a.default.preload(this.context)];case 1:return t.sent(),[4,l.default.preload(this.context)];case 2:t.sent(),this.preloaded=!0,t.label=3;case 3:return this.context.imageSmoothingEnabled=!1,this.player=new a.default(i(i({},this.getDefaultDrawableOptions()),{left:10,bottom:h.default.Game.GROUND_BUFFER})),this.background=new s.default(i({},this.getDefaultDrawableOptions())),this.score=new u.default(i(i({},this.getDefaultDrawableOptions()),{left:this.canvas.width-10,top:5})),this.frameCounter=new p.default(i(i({},this.getDefaultDrawableOptions()),{top:5})),[2]}}))}))},t.prototype.updateObstacles=function(){this.offset>this.nextObstacle&&this.lastTick>this.minTickObstable&&(f.default.rand(1,100)>30&&(this.minTickObstable=this.lastTick+f.default.rand(500,f.default.rand(1500,2500))),this.obstacles.push(new l.default(i(i({},this.getDefaultDrawableOptions()),{left:20*f.default.rand(.8,4),bottom:h.default.Game.GROUND_BUFFER}))),this.nextObstacle=this.offset+f.default.rand(h.default.Game.MIN_OBSTACLE_DISTANCE,this.canvas.width))},t.prototype.removeOldObstacles=function(){for(var t=0;this.obstacles.length>t&&this.obstacles[t].getGameObject().x<-h.default.Game.SCREEN_BUFFER;)t++;t>0&&this.obstacles.splice(0,t)},t.prototype.draw=function(){this.clear(),this.background.draw();for(var t=0;t<this.obstacles.length;t++){var e=this.obstacles[t];e.draw(),h.default.Debug.SHOW_COLLIDERS&&e.drawColliders()}this.player.draw(),this.score.draw(),this.frameCounter.draw(),h.default.Debug.SHOW_COLLIDERS&&this.player.drawColliders()},t.prototype.clear=function(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height)},t.prototype.checkCollision=function(){for(var t=this.obstacles.length>2?2:this.obstacles.length,e=0;e<t;e++){var n=this.obstacles[e];if(d.default.test(this.player.getPixelMap(),this.player.getGameObject(),n.getPixelMap(),n.getGameObject()))return this.running=!1,void(this.finished=!0)}},t.prototype.reset=function(){this.obstacles=[],this.nextObstacle=0,this.minTickObstable=0,this.offset=0,this.lastTick=null,this.running=!1,this.finished=!1},t.prototype.step=function(t){this.running&&this.lastTick?(this.frameCounter.refresh(),this.offset+=Math.min(t-this.lastTick,h.default.Game.MAX_TIME_TICK)*h.default.Game.OFFSET_SPEED,this.removeOldObstacles(),this.updateObstacles(),!this.player.isJumping()&&this.keyHandler.isKeyPressed(h.default.Game.JUMP_KEY)&&this.player.startJump(),this.draw(),this.checkCollision()):this.keyHandler.isKeyPressed(h.default.Game.JUMP_KEY)&&(this.finished?this.startGame():this.running||(this.running=!0)),this.lastTick=t,requestAnimationFrame(this.step.bind(this))},t}();e.default=y},function(t,e,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},r=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,o){function a(t){try{u(i.next(t))}catch(t){o(t)}}function s(t){try{u(i.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}))},o=this&&this.__generator||function(t,e){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(e,"__esModule",{value:!0});var a=n(0),s=n(2),u=n(4),l=function(){function t(t){this.options=t,this.initialGameObject={width:67,height:56,x:t.left,y:t.height-t.bottom-56},this.gameObject=i({},this.initialGameObject),this.jumpStart=null}return t.loadAnimations=function(t){null==this.animations&&(this.animations={run:new u.default({context:t,prefix:"player",name:"run",length:6,extension:"png",delay:100}),jump:new s.default(t,a.default.Assets.HREF+"player/jump_1.png")})},t.preload=function(e){return r(this,void 0,void 0,(function(){var n,i;return o(this,(function(r){switch(r.label){case 0:if(null!=t.animations)return[2];t.loadAnimations(e),n=Object.keys(t.animations),i=0,r.label=1;case 1:return i<n.length?[4,t.animations[n[i]].preload()]:[3,4];case 2:r.sent(),r.label=3;case 3:return i++,[3,1];case 4:return[2]}}))}))},t.prototype.isJumping=function(){return null!==this.jumpStart&&this.jumpDistanceRemaining()>0},t.prototype.jumpDistanceRemaining=function(){return null===this.jumpStart?0:this.jumpStart+a.default.Player.JUMP_DISTANCE-this.options.getOffset()},t.prototype.startJump=function(){this.jumpStart=this.options.getOffset()},t.prototype.getJumpHeight=function(){var t=this.jumpDistanceRemaining();if(t>0){var e=a.default.Player.JUMP_DISTANCE/2;t>=e&&(t-=a.default.Player.JUMP_DISTANCE);var n=Math.abs(t/e);return a.default.Player.JUMP_HEIGHT*n}return 0},t.prototype.getPixelMap=function(){return this.getCurrentAnimation().getPixelMap()},t.prototype.getGameObject=function(){return this.gameObject},t.prototype.calculatePosition=function(){this.gameObject.y=this.initialGameObject.y-this.getJumpHeight()},t.prototype.getCurrentAnimation=function(){return this.isJumping()?t.animations.jump:t.animations.run},t.prototype.draw=function(){this.calculatePosition();var t=this.options.context,e=this.gameObject,n=e.x,i=e.y,r=e.height,o=e.width;t.drawImage(this.getCurrentAnimation().getImage(),n,i,o,r)},t.prototype.drawColliders=function(){var t=this.options.context,e=this.gameObject,n=e.x,i=e.y;t.fillStyle="#ff0000";for(var r=this.getPixelMap(),o=this.getPixelMap().getPixelMap(),a=0;a<o.length;a++){var s=o[a];t.fillRect(n+s.x,i+s.y,r.getResolution(),r.getResolution())}},t.animations=null,t}();e.default=l},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e,n){void 0===n&&(n=3),this.context=t,this.image=e,this.resolution=n,this.generate()}return t.prototype.generate=function(){var t=[];this.context.drawImage(this.image,0,0,this.image.width,this.image.height);for(var e=0;e<this.image.width;e+=this.resolution)for(var n=0;n<this.image.height;n+=this.resolution){0!=this.context.getImageData(n,e,this.resolution,this.resolution).data[3]&&t.push({x:n,y:e})}this.context.clearRect(0,0,this.image.width,this.image.height),this.pixelMap=t},t.prototype.getPixelMap=function(){return this.pixelMap},t.prototype.getResolution=function(){return this.resolution},t}();e.default=i},function(t,e,n){"use strict";var i=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,o){function a(t){try{u(i.next(t))}catch(t){o(t)}}function s(t){try{u(i.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}))},r=this&&this.__generator||function(t,e){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),a=n(0),s=function(){function t(t){this.sprites=[];for(var e=t.prefix,n=t.name,i=t.length,r=t.extension,o=t.delay,s=t.context,u=a.default.Assets.HREF+(e?e+"/":"")+n+"_",l=0;l<i;l++){var c=u+(l+1)+"."+r;this.sprites.push(this.createSprite(s,c))}this.context=s,this.lastTick=(new Date).getTime(),this.currentImage=0,this.delay=o}return t.prototype.createSprite=function(t,e){return new o.default(e)},t.prototype.preload=function(){return i(this,void 0,void 0,(function(){return r(this,(function(t){return[2,Promise.all(this.sprites.map((function(t){return t.preload()})))]}))}))},t.prototype.getSprite=function(){var t=(new Date).getTime();return t-this.lastTick>this.delay&&(this.currentImage++,this.currentImage>this.sprites.length-1&&(this.currentImage=0),this.lastTick=t),this.sprites[this.currentImage]},t.prototype.getImage=function(){return this.getSprite().getImage()},t}();e.default=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),r=function(){function t(t){this.options=t,this.size=20,this.generateBits()}return t.prototype.generateBits=function(){var t,e,n=[],r=this.options,o=r.height,a=r.width;for(e=o-10;e<=o;e+=8)for(t=0+i.default.rand(0,100);t<=a;t+=i.default.rand(100,200))n.push({x:t,y:e,width:i.default.rand(2,4)});this.bits=n},t.prototype.draw=function(){var t=this.bits,e=this.size,n=this.options,i=n.context,r=n.getOffset,o=n.height,a=n.width;i.fillStyle="#F2D16B",i.fillRect(0,o-e,a,e),i.fillStyle="#856501",i.fillRect(0,o-e,a,1);for(var s=t.length-1;s>=0;s--)i.fillRect(a-(t[s].x+r())%a,t[s].y,t[s].width,1)},t}();e.default=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(0),r=function(){function t(t){this.options=t,this.gameObject={x:t.width-10,y:t.top+16,width:50,height:16}}return t.prototype.getScore=function(){return Math.floor(this.options.getOffset()*i.default.Score.FACTOR)},t.prototype.getScoreText=function(){return String(this.getScore())},t.prototype.draw=function(){var t=this.options.context,e=this.gameObject,n=e.x,i=e.y;t.fillStyle="#000000",t.font="16px Courier",t.textAlign="right",t.fillText(this.getScoreText(),n,i)},t}();e.default=r},function(t,e,n){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)},r=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))((function(r,o){function a(t){try{u(i.next(t))}catch(t){o(t)}}function s(t){try{u(i.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}u((i=i.apply(t,e||[])).next())}))},o=this&&this.__generator||function(t,e){var n,i,r,o,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return a.label++,{value:o[1],done:!1};case 5:a.label++,i=o[1],o=[0];continue;case 7:o=a.ops.pop(),a.trys.pop();continue;default:if(!(r=a.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){a=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){a.label=o[1];break}if(6===o[0]&&a.label<r[1]){a.label=r[1],r=o;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(o);break}r[2]&&a.ops.pop(),a.trys.pop();continue}o=e.call(t,a)}catch(t){o=[6,t],i=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};Object.defineProperty(e,"__esModule",{value:!0});var a=n(0),s=n(1),u=n(4),l=function(){function t(e){this.animationId=Math.round(s.default.rand(0,t.animations.length-1)),this.options=e,this.initialGameObject={width:25,height:34,x:e.width+e.getOffset()+(e.left||0)+a.default.Game.SCREEN_BUFFER,y:e.height-e.bottom-40},this.gameObject=i({},this.initialGameObject)}return t.loadAnimations=function(t){null==this.animations&&(this.animations=[new u.default({context:t,prefix:"obstacles",name:"meteor",length:2,extension:"png",delay:250})])},t.preload=function(e){return r(this,void 0,void 0,(function(){var n;return o(this,(function(i){switch(i.label){case 0:if(null!=t.animations)return[2];t.loadAnimations(e),n=0,i.label=1;case 1:return n<t.animations.length?[4,t.animations[n].preload()]:[3,4];case 2:i.sent(),i.label=3;case 3:return n++,[3,1];case 4:return[2]}}))}))},t.prototype.getGameObject=function(){return this.gameObject},t.prototype.getPixelMap=function(){return this.getCurrentAnimation().getPixelMap()},t.prototype.calculatePosition=function(){this.gameObject.x=this.initialGameObject.x-this.options.getOffset()},t.prototype.getCurrentAnimation=function(){return t.animations[this.animationId]},t.prototype.draw=function(){this.calculatePosition();var t=this.options.context,e=this.gameObject,n=e.x,i=e.y,r=e.height,o=e.width;t.drawImage(this.getCurrentAnimation().getImage(),n,i,o,r)},t.prototype.drawColliders=function(){var t=this.options.context,e=this.gameObject,n=e.x,i=e.y;t.fillStyle="#00ff00";for(var r=this.getPixelMap(),o=this.getPixelMap().getPixelMap(),a=0;a<o.length;a++){var s=o[a];t.fillRect(n+s.x,i+s.y,r.getResolution(),r.getResolution())}},t.animations=null,t}();e.default=l},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){var t=this;this.pressedKeys={},document.addEventListener("keyup",(function(e){return t.onKeyUp(e)}),!1),document.addEventListener("keydown",(function(e){return t.onKeyDown(e)}),!1)}return t.prototype.onKeyDown=function(t){this.pressedKeys[t.keyCode]=!0},t.prototype.onKeyUp=function(t){this.pressedKeys[t.keyCode]=!1},t.prototype.isKeyPressed=function(t){return void 0!==this.pressedKeys[t]&&this.pressedKeys[t]},t}();e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t){this.fps=0,this.options=t,this.gameObject={x:10,y:t.top+16,width:50,height:16}}return t.prototype.refresh=function(){if(!this.lastCalledTime)return this.lastCalledTime=performance.now(),void(this.fps=0);var t=(performance.now()-this.lastCalledTime)/1e3;this.lastCalledTime=performance.now(),this.fps=1/t},t.prototype.draw=function(){var t=this.options.context,e=this.gameObject,n=e.x,i=e.y;t.fillStyle="#000000",t.font="9px Arial",t.textAlign="left",t.fillText(Math.round(this.fps)+" fps",n,i)},t}();e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.boxTest=function(t,e){return!(t.y+t.height<e.y||t.y>e.y+e.height||t.x+t.width<e.x||t.x>e.x+e.width)},t.test=function(e,n,i,r){for(var o=e.getPixelMap(),a=(e.getResolution(),i.getPixelMap()),s=i.getResolution(),u=0;u<o.length;u++)for(var l=o[u],c={x:l.x+n.x,y:l.y+n.y,width:s,height:s},f=0;f<a.length;f++){var h=a[f],p={x:h.x+r.x,y:h.y+r.y,width:s,height:s};if(t.boxTest(c,p))return!0}},t}();e.default=i}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,